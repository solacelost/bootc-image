set $mod Mod4

# Set your terminal
set $terminal alacritty

# Enable notifications
exec mako

# Make polkit behave
exec /usr/libexec/polkit-mate-authentication-agent-1

# nm-applet support for better VPN behavior
exec nm-applet

# bluetooth control
exec blueman-applet

gaps {
    inner 4
    outer 4
}
smart_gaps on
default_border pixel 2
default_floating_border pixel 2

set {
    # Shortcuts and modi
    $screenshot /usr/local/libexec/rofi/screenshot
    $power /usr/local/libexec/rofi/power
    $wifi /usr/local/libexec/rofi/nmcli
    $finder /usr/local/libexec/rofi/finder
    $emoji /usr/local/libexec/rofi/emoji
    $lock /usr/local/bin/lock

    # Set colors
    $bg-color            #333333
    $inactive-bg-color   #333333dd
    $text-color          #f3f4f5
    $inactive-text-color #a68059
    $urgent-bg-color     #e53935
    $focus-text-color    #dfbf9f
    $black               #282828
    $darkblack           #1d2021
    $transparent         #000000aa
}

# Set the background
output "*" bg /usr/share/backgrounds/galaxypair.png fill


# client.class <border> <background> <text> [<indicator> [<child_border>]]
client.focused $focus-text-color $bg-color $focus-text-color $focus-text-color $focus-text-color
client.unfocused $inactive-text-color $transparent $text-color $transparent $transparent
client.focused_inactive $inactive-text-color $inactive-bg-color $inactive-text-color $inactive-text-color
client.urgent $urgent-bg-color $urgent-bg-color $text-color $urgent-bg-color $urgent-bg-color

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).

font pango:FontAwesome 12, "Source Code Pro" 12

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

bindsym {
    # start a terminal
    $mod+Return exec $terminal

    # kill focused window
    $mod+q kill

    # start rofi (a program launcher)
    $mod+d exec rofi -show run -m -1
    $mod+Shift+d exec rofi -show drun -m -1

    # change focus
    $mod+h focus left
    $mod+j focus down
    $mod+k focus up
    $mod+l focus right

    # alternatively, you can use the cursor keys:
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # move focused window
    $mod+Shift+h move left
    $mod+Shift+j move down
    $mod+Shift+k move up
    $mod+Shift+l move right

    # alternatively, you can use the cursor keys:
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right

    # split in horizontal orientation
    $mod+Alt+h split h

    # split in vertical orientation
    $mod+Alt+v split v

    # enter fullscreen mode for the focused container
    $mod+f fullscreen toggle

    # change container layout (stacked, tabbed, toggle split)
    $mod+s layout stacking
    $mod+t layout tabbed
    $mod+e layout toggle split

    # toggle tiling / floating
    $mod+Shift+space floating toggle

    # change focus between tiling / floating windows
    $mod+space focus mode_toggle

    # sticky toggle
    $mod+Alt+space sticky toggle

    # focus the parent/child container
    $mod+a focus parent
    $mod+z focus child
}
########################
# Workspace Management #
########################

# ensure basic setup
exec /usr/local/bin/swayworkspaces -s

bindsym {
    # switch to workspace
    $mod+1 exec /usr/local/bin/swayworkspaces -w 1
    $mod+2 exec /usr/local/bin/swayworkspaces -w 2
    $mod+3 exec /usr/local/bin/swayworkspaces -w 3
    $mod+4 exec /usr/local/bin/swayworkspaces -w 4
    $mod+5 exec /usr/local/bin/swayworkspaces -w 5
    $mod+6 exec /usr/local/bin/swayworkspaces -w 6
    $mod+7 exec /usr/local/bin/swayworkspaces -w 7
    $mod+8 exec /usr/local/bin/swayworkspaces -w 8
    $mod+9 exec /usr/local/bin/swayworkspaces -w 9
    $mod+0 exec /usr/local/bin/swayworkspaces -w 0

    # move focused container to workspace
    $mod+Shift+1 exec /usr/local/bin/swayworkspaces -m 1
    $mod+Shift+2 exec /usr/local/bin/swayworkspaces -m 2
    $mod+Shift+3 exec /usr/local/bin/swayworkspaces -m 3
    $mod+Shift+4 exec /usr/local/bin/swayworkspaces -m 4
    $mod+Shift+5 exec /usr/local/bin/swayworkspaces -m 5
    $mod+Shift+6 exec /usr/local/bin/swayworkspaces -m 6
    $mod+Shift+7 exec /usr/local/bin/swayworkspaces -m 7
    $mod+Shift+8 exec /usr/local/bin/swayworkspaces -m 8
    $mod+Shift+9 exec /usr/local/bin/swayworkspaces -m 9
    $mod+Shift+0 exec /usr/local/bin/swayworkspaces -m 0

    # move entire workspace to alternate output
    $mod+Control+Shift+Right move workspace to output right
    $mod+Control+Shift+Left move workspace to output left
    $mod+Control+Shift+Down move workspace to output down
    $mod+Control+Shift+Up move workspace to output up
    $mod+Control+Shift+l move workspace to output right
    $mod+Control+Shift+h move workspace to output left
    $mod+Control+Shift+j move workspace to output down
    $mod+Control+Shift+k move workspace to output up

    # Just cycle through
    $mod+Next workspace next
    $mod+Prior workspace prev

    # dynamic workspace control
    # create new dynamic workspace
    $mod+grave exec /usr/local/bin/swayworkspaces -d +
    # select specific dynamic workspaces
    $mod+F1 exec /usr/local/bin/swayworkspaces -d 1
    $mod+F2 exec /usr/local/bin/swayworkspaces -d 2
    $mod+F3 exec /usr/local/bin/swayworkspaces -d 3
    $mod+F4 exec /usr/local/bin/swayworkspaces -d 4
    $mod+F5 exec /usr/local/bin/swayworkspaces -d 5
    $mod+F6 exec /usr/local/bin/swayworkspaces -d 6
    $mod+F7 exec /usr/local/bin/swayworkspaces -d 7
    $mod+F8 exec /usr/local/bin/swayworkspaces -d 8
    $mod+F9 exec /usr/local/bin/swayworkspaces -d 9
    $mod+F10 exec /usr/local/bin/swayworkspaces -d 10
    $mod+F11 exec /usr/local/bin/swayworkspaces -d 11
    $mod+F12 exec /usr/local/bin/swayworkspaces -d 12
    # move focused containers into dynamic workspaces
    $mod+Shift+F1 exec /usr/local/bin/swayworkspaces -r 1
    $mod+Shift+F2 exec /usr/local/bin/swayworkspaces -r 2
    $mod+Shift+F3 exec /usr/local/bin/swayworkspaces -r 3
    $mod+Shift+F4 exec /usr/local/bin/swayworkspaces -r 4
    $mod+Shift+F5 exec /usr/local/bin/swayworkspaces -r 5
    $mod+Shift+F6 exec /usr/local/bin/swayworkspaces -r 6
    $mod+Shift+F7 exec /usr/local/bin/swayworkspaces -r 7
    $mod+Shift+F8 exec /usr/local/bin/swayworkspaces -r 8
    $mod+Shift+F9 exec /usr/local/bin/swayworkspaces -r 9
    $mod+Shift+F10 exec /usr/local/bin/swayworkspaces -r 10
    $mod+Shift+F11 exec /usr/local/bin/swayworkspaces -r 11
    $mod+Shift+F12 exec /usr/local/bin/swayworkspaces -r 12
}

###################
# Laptop Settings #
###################

input "type:touchpad" {
    dwt disabled
    tap enabled
    tap_button_map lrm
    natural_scroll enabled
}

bindgesture {
    swipe:right workspace prev
    swipe:left workspace next
    pinch:inward+up move up
    pinch:inward+down move down
    pinch:inward+left move left
    pinch:inward+right move right
}

########################
# Miscellaneous things #
########################

bindsym {
    # reload the configuration file
    $mod+Shift+c reload

    # restart sway inplace (preserves your layout/session)
    $mod+Shift+r restart

    # scratchpad stuff
    $mod+minus move scratchpad
    $mod+Shift+minus scratchpad show

    XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% # Raise
    XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% # Lower
    XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle # Mute

    # Sreen brightness controls -- # https://github.com/haikarainen/light
    XF86MonBrightnessUp exec light -A 5    # increase screen brightness
    XF86MonBrightnessDown exec light -U 5  # decrease screen brightness

    # multimedia keys
    XF86AudioPlay  exec "playerctl play-pause"
    XF86AudioStop  exec "playerctl stop"
    XF86AudioNext  exec "playerctl next"
    XF86AudioPrev  exec "playerctl previous"
    XF86AudioPause exec "playerctl pause"

    # Shutdown, Reboot, Lock Screen, and Logout
    $mod+Escape exec $power

    # Just lock
    Ctrl+Alt+l exec $lock

    # Wifi connection menu
    $mod+End exec $wifi

    # screenshots
    --release Print exec $screenshot Fullscreen
    --release Alt+Print exec $screenshot Focused
    --release Control+Print exec $screenshot Select-output
    --release Control+Alt+Print exec $screenshot Region
    --release $mod+Print exec $screenshot Select-window
    --release $mod+Shift+Print exec $screenshot

    # finder
    $mod+Shift+f exec rofi -show find -modi find:$finder

    # very important stuff
    $mod+Shift+e exec $emoji
}

# resize window (you can also use the mouse for that)
mode "resize" {
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Up resize grow height 10 px or 10 ppt
    bindsym Down resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"


bar {
    swaybar_command waybar
    workspace_buttons yes
}

# See also https://bugs.kde.org/show_bug.cgi?id=387091
exec /usr/libexec/gsd-xsettings

# Idle control
exec swayidle -w \
    timeout 600 /usr/local/bin/lock \
        resume '/usr/local/bin/lock unlock' \
    timeout 1800 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"' \
    before-sleep '/usr/local/bin/lock nobright'

# Window configurations
for_window {
    # To list windows: swaymsg -t get_tree
    [window_role="task_dialog|bubble|page-info|Preferences|pop-up|dialog|Save As|menu|Open Files"] floating enable
    [window_role="File Operation Progress"] floating enable sticky
    [instance="file_progress"] floading enable sticky
    [app_id="zenity|nmtui|vpn"] floating enable
    [class="Steam|steam"] floating enable
    [class="info|Mate-color-select|gcolor2|timesup|QtPass|GtkFileChooserDialog"] sticky enable
}

# keep proton up to date
exec protonup -y

# clipboard
exec wl-paste -t text --watch clipman store --notify
exec wl-paste -p -t text --watch clipman store --notify --primary --histpath="~/.local/share/clipman-primary.json"
bindsym $mod+Shift+p exec clipman pick --notify -t rofi

# includes
include /etc/sway/config.d/*
include ~/.config/sway/config
include /etc/sway/config.$(hostname).d/*
include ~/.config/sway/$(hostname)/*
