#!/bin/bash

set -e

if [ ! -e ~/.steam/steam/config/libraryfolders.vdf ]; then
    echo "No Steam library folder info" >&2
    exit 0
fi

function noisy {
    set -x
    "${@}"
    { set +x; } 2>/dev/null
}

readarray -d $'\0' -t library_folders < <(awk -F'"' 'BEGIN {ORS = "\0"}; /"path"/{print $4}' ~/.steam/steam/config/libraryfolders.vdf)

wineasio_dlls=(
    i386-unix/wineasio32.dll.so
    i386-windows/wineasio32.dll
    x86_64-unix/wineasio64.dll.so
    x86_64-windows/wineasio64.dll
)

desired_prefixes=(
    221680
)

while IFS= read -r -d '' proton; do
    echo "Found Proton '$proton' - updating wineasio"
    for dll in "${wineasio_dlls[@]}"; do
        src="/usr/lib/wine/$dll"
        dest="$proton/lib/wine/$dll"
        if [ -e "$src" ]; then
            noisy cp -uv "$src" "$dest"
        fi
    done
done < <(
    for folder in "${library_folders[@]}"; do find "$folder/steamapps/common" -type d -name 'Proton*' ! -name 'Proton EasyAntiCheat*' -print0; done
    find ~/.steam/steam/compatibilitytools.d -mindepth 1 -maxdepth 1 -type d -iname '*proton*' -print0
)

while IFS= read -r -d '' prefix; do
    game_id="$(basename "$(dirname "$prefix")")"
    if [[ " ${desired_prefixes[*]} " =~ [[:space:]]${game_id}[[:space:]] ]]; then
        echo "Found prefix '$prefix' - registering wineasio"
        noisy env WINEPREFIX="$prefix" /usr/local/bin/wineasio-register
    fi
done < <(
    for folder in "${library_folders[@]}"; do find "$folder/steamapps/compatdata" -mindepth 2 -maxdepth 2 -type d -name 'pfx' -print0; done
)
